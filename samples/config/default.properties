# Uncomment only one section to select the protocol to be used by run.jndi target.
# The JGroups configuration provides the same result as the hard-coded example.

#---------------
# JGroups
#
myProto.type=net.sf.jgcs.jgroups.JGroupsProtocolFactory
myProto.converter=org.osjava.sj.loader.convert.BeanConverter

myGroup.groupName=MyGroup
myGroup.configName=sequencer.xml
myGroup.type=net.sf.jgcs.jgroups.JGroupsGroup
myGroup.converter=org.osjava.sj.loader.convert.BeanConverter

myService=vsc+total
myService.type=net.sf.jgcs.jgroups.JGroupsService

#---------------
# NeEM
#
#myProto.type=net.sf.jgcs.neem.NeEMProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=127.0.0.1:10000
#myGroup.type=net.sf.jgcs.neem.NeEMGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService.type=net.sf.jgcs.neem.NeEMService
#myService.converter=org.osjava.sj.loader.convert.BeanConverter

#---------------
# Ip
#
#myProto.type=net.sf.jgcs.ip.IpProtocolFactory
#myProto.converter=org.osjava.sj.loader.convert.BeanConverter
#
#myGroup=225.1.2.3:10000
#myGroup.type=net.sf.jgcs.ip.IpGroup
#myGroup.converter=org.osjava.sj.loader.convert.ConstructorConverter
#
#myService=1
#myService.type=net.sf.jgcs.ip.IpService
#myService.converter=org.osjava.sj.loader.convert.ConstructorConverter

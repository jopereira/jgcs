Corosync/CPG implementation of jGCS - Group Communication Service
Copyright (C) 2013, Jos√© Orlando Pereira
All rights reserved.

1. Overview
-----------

The jGCS library provides a generic interface for Group
Communication. This interface can be used by applications that need
primitives from simple IP Multicast group communication to virtual
synchrony or atomic broadcast. Its a common interface to several
existing toolkits that provide different APIs.

This library contains a Corosync Closed Process Group (CPG) 
implementation using the native C API through JNI.Please see the 
Corosync home page for further details on the abilities of the CPG 
library http://www.corosync.org. 

In addition to the standard jGCS interface, package 
net.sf.jgcs.corosync.jni provides a minimum Java wrapper of the C API 
that can also be used directly.

2. Compile
----------

To compile this distribution use the Apache Ant and Ivy. Targets are:

* publish - resolve dependencies, build, and install jar files in local repository
* clean - remove all generated and downloaded files

Then compile the native binding in directory csrc/ using make. Edit
the Makefile and change it according to your local installation of
Java and Corosync.

WARNING: Due to the large stack used by cpg_dispatch() in version 2.3, 
you need to use something like -Xss65536k when invoking the JVM. 
Otherwise, you'll get segmentation faults and other weird errors.

3. Credits
----------

This implementation was developed and is maintained by J. Pereira at:

 http://github.com/jopereira/jgcs

It was based on research partially funded by the European Union. People
involved were N. Carvalho, J. Pereira, L. Rodrigues and R. Oliveira.

4. License
----------

This library is released under a BSD-style licence,
See COPYING for licensing details.

